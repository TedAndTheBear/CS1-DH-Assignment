package src.googlemapsexample;

import gmapstatic.*;

import java.awt.Image;
import java.net.*;
import java.util.ArrayList;
import java.awt.image.*;
import java.io.*;

import javax.imageio.*;

/**
 *
 * @author Karl-Johan Grinnemo
 * @version 1.0
 */
public class GoogleMapsExampleGUI extends javax.swing.JFrame {
    
 /** 
  * A simple example on how to access static maps from 
  * the Google Maps API and the thin GMapStatic package.
  */

    private static final String GOOGLE_API_KEY = "AIzaSyCaVQkp9049g--eDVhhlaf-NNDnwVfWfXI";
    
    // Buses in the vicinity of MIT.
    private double latitude  = 42.358543;
    private double longitude = -71.096178;
    private int width = 512;
    private int height = 512;
    private int zoom = 14;
    private ArrayList<MapMarker> markers = new ArrayList();
    private BufferedImage theMap;
    
    /**
     * Creates new form GoogleMapsExampleGUI
     */
    public GoogleMapsExampleGUI() {
        initComponents();
    }
    
    public void update (MapMarker marker)
    {
    	if(markers.size() == 82)
    		markers.clear();
    	
    	markers.add(marker);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        imagePanel1 = new googlemapsexample.ImagePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Google Maps Example");

        jButton1.setText("Retrieve Map");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        imagePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        // Note: Google Static Maps API uses an
        // API key to identify your application.
        MapLookup.setLicenseKey(GOOGLE_API_KEY);
        
        // Build a Google Static Map API URL of the form:
        // http://maps.googleapis.com/maps/api/staticmap?parameters.
        // See link: https://developers.google.com/maps/documentation/staticmaps/
        
        String theMapURIAsString;
        
        if(markers.isEmpty())
        {
        	theMapURIAsString = MapLookup.getMap(latitude, longitude, width, height, zoom);
        	System.out.println("empty");
        }
        else
        {
        	MapMarker[] marks = new MapMarker[markers.size()]; 
        	markers.toArray(marks);
        	theMapURIAsString = MapLookup.getMap(latitude, longitude, width, height, marks);
        }
        
        try {
            
            // Retrieve map from Google Maps.
            URL theMapURI = new URL(theMapURIAsString);
            theMap = ImageIO.read(theMapURI.openStream());
            
            // Create map image scaled to size of the application window size.
            imagePanel1
                    .setImage(theMap
                        .getScaledInstance(
                            imagePanel1.getWidth(),
                            imagePanel1.getHeight(),
                            Image.SCALE_AREA_AVERAGING));
            
            // Display map image.
            imagePanel1.repaint();
                        
        } catch( IOException ex ) {
            java.util.logging.Logger.getLogger(GoogleMapsExampleGUI
                    .class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GoogleMapsExampleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GoogleMapsExampleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GoogleMapsExampleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GoogleMapsExampleGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GoogleMapsExampleGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private googlemapsexample.ImagePanel imagePanel1;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
